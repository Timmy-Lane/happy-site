const pitchElements = [
  {
    section: "–ü—Ä–æ–±–ª–µ–º–∞",
    question: "–ö–∞–∫–∞—è –∫–ª—é—á–µ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–∞–µ—Ç —Ç–≤–æ–π —Å—Ç–∞—Ä—Ç–∞–ø?",
    options: [
      "–õ—é–¥–∏ —Ç—Ä–∞—Ç—è—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏",
      "–ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É",
      "–°—Ç—É–¥–µ–Ω—Ç—ã –∏—Å–ø—ã—Ç—ã–≤–∞—é—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º —É—á–µ–±—ã",
      "–ö–æ–º–∞–Ω–¥—ã –ø–ª–æ—Ö–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –≤ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"
    ],
    scores: [9, 10, 7, 8],
    impact: ["–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "EdTech", "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏"]
  },
  {
    section: "–†–µ—à–µ–Ω–∏–µ",
    question: "–ö–∞–∫ —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—à—å —Å–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º?",
    options: [
      "–ü–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∞",
      "–ü–æ–∫–∞–∂—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
      "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—É—Å—å –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ—Å—Ç–∏",
      "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—é —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏"
    ],
    scores: [6, 10, 8, 7],
    impact: ["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ", "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ", "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ", "–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–µ"]
  },
  {
    section: "–†—ã–Ω–æ–∫",
    question: "–ö–∞–∫ —Ç—ã –æ–±–æ—Å–Ω—É–µ—à—å —Ä–∞–∑–º–µ—Ä —Ä—ã–Ω–∫–∞?",
    options: [
      "–ü—Ä–∏–≤–µ–¥—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—Å—Ç–∞ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≥–æ–¥—ã",
      "–ü–æ–∫–∞–∂—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –Ω–∞—à–µ–π —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏",
      "–û–±—ä—è—Å–Ω—é –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ —Å–µ–≥–º–µ–Ω—Ç—ã",
      "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—é –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤"
    ],
    scores: [8, 10, 9, 7],
    impact: ["–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π", "–§–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", "–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–π", "–¢—Ä–µ–Ω–¥–æ–≤—ã–π"]
  },
  {
    section: "–ö–æ–º–∞–Ω–¥–∞",
    question: "–ö–∞–∫ —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—à—å –∫–æ–º–∞–Ω–¥—É?",
    options: [
      "–†–∞—Å—Å–∫–∞–∂—É –æ –ª–∏—á–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
      "–ü–æ–∫–∞–∂—É, –∫–∞–∫ –Ω–∞–≤—ã–∫–∏ –∫–æ–º–∞–Ω–¥—ã —Ä–µ—à–∞—é—Ç –∫–ª—é—á–µ–≤—ã–µ –∑–∞–¥–∞—á–∏ –±–∏–∑–Ω–µ—Å–∞",
      "–£–ø–æ–º—è–Ω—É –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö",
      "–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é —Ö–∏–º–∏—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥—ã"
    ],
    scores: [7, 10, 8, 9],
    impact: ["–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π", "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π", "–û–ø—ã—Ç–Ω—ã–π", "–°–∏–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π"]
  },
  {
    section: "–§–∏–Ω–∞–Ω—Å—ã",
    question: "–ö–∞–∫ —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—à—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –º–æ–¥–µ–ª—å?",
    options: [
      "–ü–æ–∫–∞–∂—É –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ 5 –ª–µ—Ç –≤–ø–µ—Ä–µ–¥",
      "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—É—Å—å –Ω–∞ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö –∏ —Ç–æ—á–∫–µ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏",
      "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è",
      "–û–±—ä—è—Å–Ω—é, –∫–∞–∫ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"
    ],
    scores: [7, 10, 9, 8],
    impact: ["–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π", "–ú–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π", "–°—Ü–µ–Ω–∞—Ä–Ω—ã–π", "–¶–µ–ª–µ–≤–æ–π"]
  }
];

let currentElement = 0;
let pitchChoices = [];
let totalScore = 0;
let timeLeft = 300; // 5 minutes
let timerInterval;

function startPitch() {
  document.getElementById("welcomeScreen").style.display = "none";
  document.getElementById("pitchScreen").style.display = "block";
  
  startTimer();
  showPitchElement();
}

function startTimer() {
  timerInterval = setInterval(() => {
    timeLeft--;
    updateTimerDisplay();
    
    if (timeLeft <= 0) {
      clearInterval(timerInterval);
      // Auto-complete if time runs out
      autoCompletePitch();
    }
  }, 1000);
}

function updateTimerDisplay() {
  const minutes = Math.floor(timeLeft / 60);
  const seconds = timeLeft % 60;
  document.getElementById("timer").textContent = 
    `${minutes}:${seconds.toString().padStart(2, '0')}`;
  
  // Change color as time runs out
  const timerEl = document.getElementById("timer");
  if (timeLeft <= 60) {
    timerEl.style.color = "#ef4444";
  } else if (timeLeft <= 120) {
    timerEl.style.color = "#f59e0b";
  }
}

function showPitchElement() {
  const element = pitchElements[currentElement];
  const container = document.getElementById("pitchContainer");
  
  container.innerHTML = `
    <div class="pitch-section">
      <div class="section-badge">${element.section}</div>
      <h3 class="pitch-question">${element.question}</h3>
      <div class="pitch-options" id="pitchOptions">
        ${element.options.map((option, index) => 
          `<div class="pitch-option" onclick="selectPitchOption(${index})" data-index="${index}">
            <div class="option-text">${option}</div>
            <div class="option-impact">${element.impact[index]}</div>
          </div>`
        ).join('')}
      </div>
    </div>
  `;
  
  document.getElementById("actionArea").innerHTML = `
    <button class="build-btn" id="buildBtn" onclick="nextPitchElement()">
      ${currentElement < pitchElements.length - 1 ? '–°–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫' : '–ù–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é'}
    </button>
  `;
  
  updateProgress();
}

function selectPitchOption(index) {
  const options = document.querySelectorAll(".pitch-option");
  options.forEach(opt => opt.classList.remove("selected"));
  options[index].classList.add("selected");
  
  pitchChoices[currentElement] = index;
  document.getElementById("buildBtn").classList.add("active");
}

function nextPitchElement() {
  if (pitchChoices[currentElement] === undefined) return;
  
  totalScore += pitchElements[currentElement].scores[pitchChoices[currentElement]];
  currentElement++;
  
  if (currentElement < pitchElements.length) {
    showPitchElement();
    document.getElementById("buildBtn").classList.remove("active");
  } else {
    startPresentation();
  }
}

function updateProgress() {
  const progress = ((currentElement + 1) / pitchElements.length) * 100;
  document.getElementById("progressBar").style.width = progress + "%";
}

function startPresentation() {
  clearInterval(timerInterval);
  document.getElementById("pitchScreen").style.display = "none";
  document.getElementById("presentationScreen").style.display = "block";
  
  presentPitch();
}

let currentSlide = 0;
function presentPitch() {
  const slides = [
    "üéØ <strong>–ü—Ä–æ–±–ª–µ–º–∞:</strong><br>" + pitchElements[0].options[pitchChoices[0]],
    "üí° <strong>–†–µ—à–µ–Ω–∏–µ:</strong><br>" + pitchElements[1].options[pitchChoices[1]],
    "üìä <strong>–†—ã–Ω–æ–∫:</strong><br>" + pitchElements[2].options[pitchChoices[2]],
    "üë• <strong>–ö–æ–º–∞–Ω–¥–∞:</strong><br>" + pitchElements[3].options[pitchChoices[3]],
    "üí∞ <strong>–§–∏–Ω–∞–Ω—Å—ã:</strong><br>" + pitchElements[4].options[pitchChoices[4]]
  ];
  
  document.getElementById("presentationContent").innerHTML = `
    <div class="slide">
      <div class="slide-content">${slides[currentSlide]}</div>
    </div>
  `;
  
  if (currentSlide >= slides.length - 1) {
    document.getElementById("continueBtn").textContent = "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é";
    document.getElementById("continueBtn").onclick = showResults;
  }
}

function nextSlide() {
  currentSlide++;
  if (currentSlide < 5) {
    presentPitch();
  } else {
    showResults();
  }
}

function autoCompletePitch() {
  // Auto-select first option for remaining elements
  while (currentElement < pitchElements.length) {
    pitchChoices[currentElement] = 0;
    totalScore += pitchElements[currentElement].scores[0];
    currentElement++;
  }
  startPresentation();
}

function showResults() {
  document.getElementById("presentationScreen").style.display = "none";
  document.getElementById("resultsScreen").style.display = "block";
  
  const maxScore = pitchElements.reduce((sum, el) => sum + Math.max(...el.scores), 0);
  const percentage = Math.round((totalScore / maxScore) * 100);
  
  let funding, title, feedback, analysis;
  
  if (percentage >= 90) {
    funding = "$2.5M";
    title = "Visionary CEO";
    feedback = "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è! –ò–Ω–≤–µ—Å—Ç–æ—Ä—ã –≥–æ—Ç–æ–≤—ã –≤–ª–æ–∂–∏—Ç—å—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ! üî•";
    analysis = "üèÜ –¢–≤–æ—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –±—ã–ª–∞ –±–µ–∑—É–ø—Ä–µ—á–Ω–æ–π! –¢—ã –ø–æ–∫–∞–∑–∞–ª–∞ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞, —á–µ—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è –∏ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—É—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –º–æ–¥–µ–ª—å. –ò–Ω–≤–µ—Å—Ç–æ—Ä—ã –≤–ø–µ—á–∞—Ç–ª–µ–Ω—ã —Ç–≤–æ–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–æ–º.";
  } else if (percentage >= 75) {
    funding = "$1.8M";
    title = "Startup Founder";
    feedback = "–°–∏–ª—å–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è! –ò–Ω–≤–µ—Å—Ç–æ—Ä—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –æ–±—Å—É–∂–¥–µ–Ω–∏–∏. üíº";
    analysis = "üåü –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞ —Ö–æ—Ä–æ—à—É—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞. –ù–µ—Å–∫–æ–ª—å–∫–æ –∞—Å–ø–µ–∫—Ç–æ–≤ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å, –Ω–æ –æ–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—á–µ–Ω—å –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ.";
  } else if (percentage >= 60) {
    funding = "$1.2M";
    title = "Entrepreneur";
    feedback = "–•–æ—Ä–æ—à–∞—è –æ—Å–Ω–æ–≤–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞! –ï—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è. üìà";
    analysis = "üí™ –ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –¢—ã –ø–æ–∫–∞–∑–∞–ª–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ –±–∏–∑–Ω–µ—Å–∞ –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏. –° –Ω–µ–±–æ–ª—å—à–∏–º–∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∞–º–∏ —Ç–≤–æ–π –ø—Ä–æ–µ–∫—Ç –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –æ—á–µ–Ω—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.";
  } else {
    funding = "$500K";
    title = "Aspiring Founder";
    feedback = "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–¥–µ—è! –ù—É–∂–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –¥–µ—Ç–∞–ª—è–º–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏. üöÄ";
    analysis = "üå± –•–æ—Ä–æ—à–µ–µ –Ω–∞—á–∞–ª–æ! –£ —Ç–µ–±—è –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–¥–µ–∏, –Ω–æ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ —Ç—Ä–µ–±—É—é—Ç —Ä–∞–∑–≤–∏—Ç–∏—è. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –æ–ø—ã—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–æ—Å—Ç–∞.";
  }
  
  document.getElementById("fundingAmount").textContent = funding;
  document.getElementById("cardTitle").textContent = title;
  document.getElementById("investorFeedback").textContent = feedback;
  document.getElementById("pitchAnalysis").innerHTML = analysis;
}