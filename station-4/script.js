const categories = [
  {
    id: 'layout',
    title: 'üè™ –ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ –∏ –ù–∞–≤–∏–≥–∞—Ü–∏—è',
    description: '–£–¥–æ–±—Å—Ç–≤–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è, –ª–æ–≥–∏—á–Ω–æ—Å—Ç—å –∑–æ–Ω, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å',
    placeholder: '–û–ø–∏—à–∏—Ç–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –æ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞, —É–¥–æ–±—Å—Ç–≤–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–æ–≤...'
  },
  {
    id: 'assortment',
    title: 'üì¶ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∏ –†–∞–∑–º–µ—â–µ–Ω–∏–µ',
    description: '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ç–æ–≤–∞—Ä–æ–≤, —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å, –ª–æ–≥–∏–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è',
    placeholder: '–û—Ü–µ–Ω–∏—Ç–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ä–∞–∑–º–µ—â–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã, –µ—Å—Ç—å –ª–∏ —Å–µ–∑–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è...'
  },
  {
    id: 'service',
    title: 'üë• –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –°–µ—Ä–≤–∏—Å',
    description: '–ó–Ω–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞, –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ—á—å, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º',
    placeholder: '–ö–∞–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏? –ì–æ—Ç–æ–≤—ã –ª–∏ –ø–æ–º–æ—á—å, –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã –ª–∏ –≤ —Ç–æ–≤–∞—Ä–∞—Ö...'
  },
  {
    id: 'pricing',
    title: 'üí∞ –¶–µ–Ω–æ–≤–∞—è –°—Ç—Ä–∞—Ç–µ–≥–∏—è',
    description: '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ü–µ–Ω, –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏',
    placeholder: '–í–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –æ —Ü–µ–Ω–∞—Ö: —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–µ –ª–∏, –µ—Å—Ç—å –ª–∏ –∞–∫—Ü–∏–∏, –ø–æ–Ω—è—Ç–Ω–∞ –ª–∏ —Ü–µ–Ω–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤...'
  },
  {
    id: 'visual',
    title: '‚ú® –í–∏–∑—É–∞–ª—å–Ω—ã–π –ú–µ—Ä—á–∞–Ω–¥–∞–π–∑–∏–Ω–≥',
    description: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ, —á–∏—Å—Ç–æ—Ç–∞, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏—Ç—Ä–∏–Ω',
    placeholder: '–û—Ü–µ–Ω–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥: —á–∏—Å—Ç–æ—Ç–∞, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤–∏—Ç—Ä–∏–Ω, –æ—Å–≤–µ—â–µ–Ω–∏–µ, –æ–±—â–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞...'
  }
];

let ratings = {};
let observations = {};
let recommendations = [];
let currentStep = 'welcome';

function startAnalysis() {
  document.getElementById('welcomeScreen').style.display = 'none';
  document.getElementById('checklistScreen').style.display = 'block';
  currentStep = 'checklist';
  renderChecklist();
}

function renderChecklist() {
  const container = document.getElementById('checklistContainer');
  container.innerHTML = categories.map(category => `
    <div class="checklist-category">
      <div class="category-title">
        ${category.title}
      </div>
      <p style="color: #64748b; margin-bottom: 15px; font-size: 0.9em;">
        ${category.description}
      </p>
      <div class="rating-container">
        <span class="rating-label">–û—Ü–µ–Ω–∫–∞:</span>
        ${[1,2,3,4,5].map(star => `
          <span class="rating-star" data-category="${category.id}" data-rating="${star}" onclick="setRating('${category.id}', ${star})">
            ‚≠ê
          </span>
        `).join('')}
      </div>
      <div style="margin-top: 15px; padding: 12px; background: #f8fafc; border-radius: 8px; border: 2px dashed #cbd5e1;">
        <p style="color: #64748b; font-style: italic; font-size: 0.9em; text-align: center;">
          üí¨ –í–∏–ª–∏–Ω–∞ –æ—Ç–≤–µ—á–∞–µ—Ç —É—Å—Ç–Ω–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å: "${category.placeholder}"
        </p>
      </div>
    </div>
  `).join('');
  
  updateChecklistProgress();
}

function setRating(categoryId, rating) {
  ratings[categoryId] = rating;
  
  // Update star display
  const stars = document.querySelectorAll(`[data-category="${categoryId}"][data-rating]`);
  stars.forEach(star => {
    const starRating = parseInt(star.dataset.rating);
    star.classList.toggle('active', starRating <= rating);
  });
  
  updateChecklistProgress();
}

function updateChecklistProgress() {
  const completedRatings = Object.keys(ratings).length;
  const isComplete = completedRatings === categories.length && 
                    Object.values(ratings).every(rating => rating >= 1);
  
  const nextBtn = document.getElementById('checklistNextBtn');
  if (isComplete) {
    nextBtn.classList.add('active');
  } else {
    nextBtn.classList.remove('active');
  }
  
  const progress = (completedRatings / categories.length) * 50 + 20;
  document.getElementById('progressBar').style.width = progress + '%';
}

function goToRecommendations() {
  if (!document.getElementById('checklistNextBtn').classList.contains('active')) return;
  
  document.getElementById('checklistScreen').style.display = 'none';
  document.getElementById('recommendationsScreen').style.display = 'block';
  currentStep = 'recommendations';
  renderRecommendations();
}

function renderRecommendations() {
  const container = document.getElementById('recommendationsContainer');
  container.innerHTML = [1,2,3].map(num => `
    <div class="recommendation-form">
      <div class="recommendation-title">
        üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è ${num}
      </div>
      <div style="margin: 15px 0; padding: 15px; background: #f8fafc; border-radius: 8px; border: 2px dashed #cbd5e1;">
        <p style="color: #64748b; font-style: italic; font-size: 0.9em; text-align: center;">
          üí¨ –í–∏–ª–∏–Ω–∞ –¥–∞–µ—Ç —É—Å—Ç–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –º–∞–≥–∞–∑–∏–Ω–∞
        </p>
      </div>
      <button class="recommendation-complete-btn" onclick="markRecommendationComplete(${num})" 
              style="background: #e2e8f0; color: #64748b; border: none; padding: 8px 16px; border-radius: 6px; cursor: pointer; font-size: 0.9em; transition: all 0.3s ease;">
        ‚úì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥–∞–Ω–∞
      </button>
    </div>
  `).join('');
  
  // Initialize recommendations array
  recommendations = [false, false, false];
  updateRecommendationsProgress();
}

function markRecommendationComplete(num) {
  recommendations[num-1] = true;
  
  // Update button style
  const buttons = document.querySelectorAll('.recommendation-complete-btn');
  const button = buttons[num-1];
  button.style.background = '#22c55e';
  button.style.color = 'white';
  button.textContent = '‚úì –ì–æ—Ç–æ–≤–æ';
  button.disabled = true;
  
  updateRecommendationsProgress();
}

function updateRecommendationsProgress() {
  const completedRecs = recommendations.filter(rec => rec === true).length;
  const isComplete = completedRecs === 3;
  
  const nextBtn = document.getElementById('recsNextBtn');
  if (isComplete) {
    nextBtn.classList.add('active');
  } else {
    nextBtn.classList.remove('active');
  }
  
  const progress = (completedRecs / 3) * 30 + 70;
  document.getElementById('progressBar2').style.width = progress + '%';
}

function generateReport() {
  if (!document.getElementById('recsNextBtn').classList.contains('active')) return;
  
  document.getElementById('recommendationsScreen').style.display = 'none';
  document.getElementById('resultsScreen').style.display = 'block';
  
  const avgRating = Object.values(ratings).reduce((a, b) => a + b, 0) / Object.values(ratings).length;
  const scorePercentage = Math.round((avgRating / 5) * 100);
  
  document.getElementById('finalScore').textContent = scorePercentage + '%';
  
  let comment, title, result;
  
  if (scorePercentage >= 80) {
    title = "Senior Retail Consultant";
    comment = "–û—Ç–ª–∏—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑! üèÜ";
    result = "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢–≤–æ–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞–ª –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–æ–∑–Ω–∏—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å. –¢—ã –≥–æ—Ç–æ–≤–∞ –∫ —Ä–æ–ª–∏ —Ç–æ–ø-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞!";
  } else if (scorePercentage >= 60) {
    title = "Retail Analyst";
    comment = "–•–æ—Ä–æ—à–∞—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞! üìä";
    result = "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑! –¢—ã –ø–æ–∫–∞–∑–∞–ª–∞ —Ö–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–æ–∑–Ω–∏—á–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –¢–≤–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω—ã. –û—Ç–ª–∏—á–Ω–∞—è –±–∞–∑–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤!";
  } else {
    title = "Junior Consultant";
    comment = "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–æ–µ –Ω–∞—á–∞–ª–æ! üå±";
    result = "–•–æ—Ä–æ—à–µ–µ –Ω–∞—á–∞–ª–æ –≤ —Ä–µ—Ç–µ–π–ª-–∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–µ! –¢—ã –æ—Å–≤–æ–∏–ª–∞ –æ—Å–Ω–æ–≤—ã –∞–Ω–∞–ª–∏–∑–∞ —Ä–æ–∑–Ω–∏—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏. –° –æ–ø—ã—Ç–æ–º —Ç–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!";
  }
  
  document.getElementById('cardTitle').textContent = title;
  document.getElementById('scoreComment').textContent = comment;
  document.getElementById('analysisResult').innerHTML = `<strong>–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:</strong><br>${result}`;
}